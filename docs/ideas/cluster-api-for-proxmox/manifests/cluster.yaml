apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: nuage-cluster
  name: nuage-cluster
  namespace: default
spec:
  controlPlaneEndpoint:
    host: 192.168.5.210
    port: 6443
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: nuage-cluster
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: ProxmoxCluster
    name: nuage-cluster
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: ProxmoxCluster
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: nuage-cluster
  name: nuage-cluster
  namespace: default
spec:
  controlPlaneEndpoint:
    host: 192.168.5.210
    port: 6443
  serverRef:
    endpoint: https://192.168.5.21:8006/api2/json
    secretRef:
      name: proxmox-secret
      namespace: default
  storage:
    name: nuage-cluster
    path: ""
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: nuage-cluster
  name: nuage-cluster
  namespace: default
spec:
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        extraArgs:
          cloud-provider: external
      controllerManager:
        extraArgs:
          cloud-provider: external
      networking:
        dnsDomain: cluster.local
        podSubnet: 10.244.0.0/16
        serviceSubnet: 10.96.0.0/16
    files:
    - content: |
        apiVersion: v1
        kind: Pod
        metadata:
          creationTimestamp: null
          name: kube-vip
          namespace: kube-system
        spec:
          containers:
          - args:
            - manager
            env:
            - name: cp_enable
              value: "true"
            - name: vip_interface
              value: ""
            - name: address
              value: 192.168.5.210
            - name: port
              value: "6443"
            - name: vip_arp
              value: "true"
            - name: vip_leaderelection
              value: "true"
            - name: vip_leaseduration
              value: "15"
            - name: vip_renewdeadline
              value: "10"
            - name: vip_retryperiod
              value: "2"
            image: ghcr.io/kube-vip/kube-vip:v0.5.11
            imagePullPolicy: IfNotPresent
            name: kube-vip
            resources: {}
            securityContext:
              capabilities:
                add:
                - NET_ADMIN
                - NET_RAW
            volumeMounts:
            - mountPath: /etc/kubernetes/admin.conf
              name: kubeconfig
          hostAliases:
          - hostnames:
            - kubernetes
            ip: 127.0.0.1
          hostNetwork: true
          volumes:
          - hostPath:
              path: /etc/kubernetes/admin.conf
              type: FileOrCreate
            name: kubeconfig
        status: {}
      owner: root:root
      path: /etc/kubernetes/manifests/kube-vip.yaml
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
    postKubeadmCommands:
    - curl -L https://dl.k8s.io/release/v1.27.3/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl
    - chmod +x /usr/local/bin/kubectl
    - reboot now
    preKubeadmCommands: []
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: ProxmoxMachineTemplate
      name: nuage-cluster-controlplane
  replicas: 3
  version: v1.27.3
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: ProxmoxMachineTemplate
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: nuage-cluster
  name: nuage-cluster-controlplane
  namespace: default
spec:
  template:
    spec:
      cloudInit:
        user:
          packages:
          - socat
          - conntrack
          runCmd:
          - modprobe overlay
          - modprobe br_netfilter
          - sysctl --system
          - mkdir -p /usr/local/bin
          - curl -L "https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz"
            | tar Cxvz "/usr/local"
          - curl -L "https://raw.githubusercontent.com/containerd/containerd/main/containerd.service"
            -o /etc/systemd/system/containerd.service
          - mkdir -p /etc/containerd
          - containerd config default > /etc/containerd/config.toml
          - sed 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
            -i
          - systemctl daemon-reload
          - systemctl enable --now containerd
          - mkdir -p /usr/local/sbin
          - curl -L "https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64"
            -o /usr/local/sbin/runc
          - chmod 755 /usr/local/sbin/runc
          - mkdir -p /opt/cni/bin
          - curl -L "https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz"
            | tar -C "/opt/cni/bin" -xz
          - curl -L "https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.27.0/crictl-v1.27.0-linux-amd64.tar.gz"
            | tar -C "/usr/local/bin" -xz
          - curl -L --remote-name-all https://dl.k8s.io/release/v1.27.3/bin/linux/amd64/kubeadm
            -o /usr/local/bin/kubeadm
          - chmod +x /usr/local/bin/kubeadm
          - curl -L --remote-name-all https://dl.k8s.io/release/v1.27.3/bin/linux/amd64/kubelet
            -o /usr/local/bin/kubelet
          - chmod +x /usr/local/bin/kubelet
          - curl -sSL "https://raw.githubusercontent.com/kubernetes/release/v0.15.1/cmd/kubepkg/templates/latest/deb/kubelet/lib/systemd/system/kubelet.service"
            | sed "s:/usr/bin:/usr/local/bin:g" | tee /etc/systemd/system/kubelet.service
          - mkdir -p /etc/systemd/system/kubelet.service.d
          - curl -sSL "https://raw.githubusercontent.com/kubernetes/release/v0.15.1/cmd/kubepkg/templates/latest/deb/kubeadm/10-kubeadm.conf"
            | sed "s:/usr/bin:/usr/local/bin:g" | tee /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
          - systemctl enable kubelet.service
          writeFiles:
          - content: overlay\nbr_netfilter
            owner: root:root
            path: /etc/modules-load.d/k8s.conf
            permissions: "0640"
          - content: |
              net.bridge.bridge-nf-call-iptables  = 1
              net.bridge.bridge-nf-call-ip6tables = 1
              net.ipv4.ip_forward                 = 1
            owner: root:root
            path: /etc/sysctl.d/k8s.conf
            permissions: "0640"
      hardware:
        cpu: 4
        memory: 8192
      image:
        checksum: c5eed826009c9f671bc5f7c9d5d63861aa2afe91aeff1c0d3a4cb5b28b2e35d6
        checksumType: sha256
        url: https://cloud-images.ubuntu.com/releases/jammy/release-20230914/ubuntu-22.04-server-cloudimg-amd64-disk-kvm.img
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: nuage-cluster
  name: nuage-cluster-md-0
  namespace: default
spec:
  clusterName: nuage-cluster
  replicas: 3
  selector:
    matchLabels: {}
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: nuage-cluster-md-0
      clusterName: nuage-cluster
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: ProxmoxMachineTemplate
        name: nuage-cluster-md-0
      version: v1.27.3
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: nuage-cluster
  name: nuage-cluster-md-0
  namespace: default
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: external
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: ProxmoxMachineTemplate
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: nuage-cluster
  name: nuage-cluster-md-0
  namespace: default
spec:
  template:
    spec:
      cloudInit:
        user:
          packages:
          - socat
          - conntrack
          runCmd:
          - modprobe overlay
          - modprobe br_netfilter
          - sysctl --system
          - mkdir -p /usr/local/bin
          - curl -L "https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz"
            | tar Cxvz "/usr/local"
          - curl -L "https://raw.githubusercontent.com/containerd/containerd/main/containerd.service"
            -o /etc/systemd/system/containerd.service
          - mkdir -p /etc/containerd
          - containerd config default > /etc/containerd/config.toml
          - sed 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
            -i
          - systemctl daemon-reload
          - systemctl enable --now containerd
          - mkdir -p /usr/local/sbin
          - curl -L "https://github.com/opencontainers/runc/releases/download/v1.1.7/runc.amd64"
            -o /usr/local/sbin/runc
          - chmod 755 /usr/local/sbin/runc
          - mkdir -p /opt/cni/bin
          - curl -L "https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz"
            | tar -C "/opt/cni/bin" -xz
          - curl -L "https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.27.0/crictl-v1.27.0-linux-amd64.tar.gz"
            | tar -C "/usr/local/bin" -xz
          - curl -L --remote-name-all https://dl.k8s.io/release/v1.27.3/bin/linux/amd64/kubeadm
            -o /usr/local/bin/kubeadm
          - chmod +x /usr/local/bin/kubeadm
          - curl -L --remote-name-all https://dl.k8s.io/release/v1.27.3/bin/linux/amd64/kubelet
            -o /usr/local/bin/kubelet
          - chmod +x /usr/local/bin/kubelet
          - curl -sSL "https://raw.githubusercontent.com/kubernetes/release/v0.15.1/cmd/kubepkg/templates/latest/deb/kubelet/lib/systemd/system/kubelet.service"
            | sed "s:/usr/bin:/usr/local/bin:g" | tee /etc/systemd/system/kubelet.service
          - mkdir -p /etc/systemd/system/kubelet.service.d
          - curl -sSL "https://raw.githubusercontent.com/kubernetes/release/v0.15.1/cmd/kubepkg/templates/latest/deb/kubeadm/10-kubeadm.conf"
            | sed "s:/usr/bin:/usr/local/bin:g" | tee /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
          - systemctl enable kubelet.service
          writeFiles:
          - content: overlay\nbr_netfilter
            owner: root:root
            path: /etc/modules-load.d/k8s.conf
            permissions: "0640"
          - content: |
              net.bridge.bridge-nf-call-iptables  = 1
              net.bridge.bridge-nf-call-ip6tables = 1
              net.ipv4.ip_forward                 = 1
            owner: root:root
            path: /etc/sysctl.d/k8s.conf
            permissions: "0640"
      hardware:
        cpu: 4
        memory: 16384
      image:
        checksum: c5eed826009c9f671bc5f7c9d5d63861aa2afe91aeff1c0d3a4cb5b28b2e35d6
        checksumType: sha256
        url: https://cloud-images.ubuntu.com/releases/jammy/release-20230914/ubuntu-22.04-server-cloudimg-amd64-disk-kvm.img
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: nuage-cluster
  name: nuage-cluster-crs-0
  namespace: default
spec:
  clusterSelector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: nuage-cluster
  resources:
  - kind: ConfigMap
    name: cloud-controller-manager
  strategy: Reconcile

- name: Kubelet ip
  ansible.builtin.copy:
    content: "KUBELET_EXTRA_ARGS=--node-ip={{ ansible_host }}"
    dest: /etc/default/kubelet
    mode: "0755"
    owner: "{{ ansible_env.SUDO_USER }}"
    group: "{{ ansible_env.SUDO_USER }}"

- name: Check kubelet.conf
  ansible.builtin.stat:
    path: "/etc/kubernetes/kubelet.conf"
  register: kubelet_conf
  failed_when: kubelet_conf.stat.exists

- name: Edit /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: ".* nuage-cluster-endpoint"
    state: absent

- name: Edit /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: ".* nuage-cluster-endpoint"
    line: "{{ hostvars[groups['control-plane'][0]].ansible_host }} nuage-cluster-endpoint"
    state: present

- name: Setup Master Node 1
  ansible.builtin.include_tasks:
    file: setup_master_1.yml

- name: Get join command
  ansible.builtin.command: kubeadm token create --print-join-command
  register: join_command
  changed_when: false
  when: inventory_hostname == groups["control-plane"][0]

- name: Get cert
  ansible.builtin.command: kubeadm init phase upload-certs --upload-certs
  register: kube_cert
  changed_when: false
  when: inventory_hostname == groups["control-plane"][0]

############################## Setup Other Master Nodes ##############################
- name: Join Master Nodes # noqa: no-changed-when
  ansible.builtin.command: |
    {{ hostvars[groups['control-plane'][0]]['join_command'].stdout }} \
      --control-plane \
      --apiserver-advertise-address={{ ansible_host }} \
      --certificate-key {{ hostvars[groups['control-plane'][0]]['kube_cert'].stdout_lines[-1] }}
  when:
    - inventory_hostname in groups["control-plane"]
    - inventory_hostname != groups["control-plane"][0]

############################## Setup Worker Nodes ##############################
- name: Join Worker Nodes # noqa: no-changed-when
  ansible.builtin.command: bash -c "{{ hostvars[groups['control-plane'][0]]['join_command'].stdout }}"
  when:
    - inventory_hostname in groups["node"]

############################## Setup vip ##############################
- name: Wait nodes become ready
  ansible.builtin.command: kubectl wait --for=condition=Ready --all nodes --timeout=300s
  when: inventory_hostname == groups["control-plane"][0]
  changed_when: false

- name: Setup kube-vip
  ansible.builtin.script: setup-vip.sh
  when: inventory_hostname == groups["control-plane"][0] and not kubelet_conf.stat.exists

- name: Edit /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: ".* nuage-cluster-endpoint"
    state: absent

- name: Edit /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "192.168.5.50 nuage-cluster-endpoint"
    state: present

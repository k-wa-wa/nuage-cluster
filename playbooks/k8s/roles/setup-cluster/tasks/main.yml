- name: Kubelet ip
  ansible.builtin.copy:
    content: "KUBELET_EXTRA_ARGS=--node-ip={{ ansible_host }}"
    dest: /etc/default/kubelet
    mode: "0755"
    owner: "{{ ansible_env.SUDO_USER }}"
    group: "{{ ansible_env.SUDO_USER }}"

- name: Check kubelet.conf
  ansible.builtin.stat:
    path: "/etc/kubernetes/kubelet.conf"
  register: kubelet_conf

- name: Edit /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: ".* nuage-cluster-endpoint"
    state: absent
  when: inventory_hostname == groups["control-plane"][0] and not kubelet_conf.stat.exists

############################## Setup Master Node 1 ##############################
- name: Edit /etc/hosts on 1
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: "\b.* nuage-cluster-endpoint\b"
    line: "{{ ansible_host }} nuage-cluster-endpoint"
    state: present
  when: inventory_hostname == groups["control-plane"][0] and not kubelet_conf.stat.exists

- name: Initialize Kubernetes Master Node # noqa: no-changed-when
  ansible.builtin.command: |
    kubeadm init \
      --pod-network-cidr=10.244.0.0/16 \
      --control-plane-endpoint=nuage-cluster-endpoint:6443 \
      --apiserver-advertise-address={{ hostvars[groups['control-plane'][0]].ansible_host }} \
      --upload-certs \
      --apiserver-cert-extra-sans=192.168.5.50
  when: inventory_hostname == groups["control-plane"][0] and not kubelet_conf.stat.exists

- name: Create ~/.kube directory
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.kube/"
    state: directory
    mode: "0755"
    owner: "{{ ansible_env.SUDO_USER }}"
    group: "{{ ansible_env.SUDO_USER }}"
  when: inventory_hostname == groups["control-plane"][0] and not kubelet_conf.stat.exists

- name: Copy admin.conf to home
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "{{ ansible_env.HOME }}/.kube/config"
    mode: "0600"
    owner: "{{ ansible_env.SUDO_USER }}"
    group: "{{ ansible_env.SUDO_USER }}"
    remote_src: true
  when: inventory_hostname == groups["control-plane"][0] and not kubelet_conf.stat.exists

- name: Fetch admin.conf
  ansible.builtin.fetch:
    src: /etc/kubernetes/admin.conf
    dest: ./admin.conf
    flat: true
  when: inventory_hostname == groups["control-plane"][0] and not kubelet_conf.stat.exists

# setup calico
- name: Copy calico-custom-resources.yaml
  ansible.builtin.copy:
    src: calico-custom-resources.yaml
    dest: "{{ ansible_env.HOME }}/calico-custom-resources.yaml"
    mode: "0755"
    owner: "{{ ansible_env.SUDO_USER }}"
    group: "{{ ansible_env.SUDO_USER }}"
    backup: true
  when: inventory_hostname == groups["control-plane"][0] and not kubelet_conf.stat.exists

- name: Setup calico # noqa: no-changed-when
  ansible.builtin.command: kubectl create -f https://docs.projectcalico.org/manifests/tigera-operator.yaml
  when: inventory_hostname == groups["control-plane"][0] and not kubelet_conf.stat.exists

- name: Setup calico 2 # noqa: no-changed-when
  ansible.builtin.command: kubectl apply -f {{ ansible_env.HOME }}/calico-custom-resources.yaml
  when: inventory_hostname == groups["control-plane"][0] and not kubelet_conf.stat.exists

- name: Wait etcd
  ansible.builtin.script: wait-etcd.sh
  when: inventory_hostname == groups["control-plane"][0] and not kubelet_conf.stat.exists

- name: Setup kube-vip
  ansible.builtin.script: setup-vip.sh
  when: inventory_hostname == groups["control-plane"][0] and not kubelet_conf.stat.exists

- name: Edit /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: ".* nuage-cluster-endpoint"
    state: absent

- name: Edit /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "192.168.5.50 nuage-cluster-endpoint"
    state: present

- name: Get join command
  ansible.builtin.command: kubeadm token create --print-join-command
  register: join_command
  changed_when: false
  when: inventory_hostname == groups["control-plane"][0]

- name: Cert
  ansible.builtin.command: kubeadm init phase upload-certs --upload-certs
  register: kube_cert
  changed_when: false
  when: inventory_hostname == groups["control-plane"][0]

############################## Setup Other Master Nodes ##############################
- name: Join Master Nodes # noqa: no-changed-when
  ansible.builtin.command: |
    {{ hostvars[groups['control-plane'][0]]['join_command'].stdout }} \
      --control-plane \
      --apiserver-advertise-address={{ ansible_host }} \
      --certificate-key {{ hostvars[groups['control-plane'][0]]['kube_cert'].stdout_lines[-1] }}
  when:
    - not kubelet_conf.stat.exists
    - inventory_hostname in groups["control-plane"]
    - inventory_hostname != groups["control-plane"][0]

############################## Worker Node Setup ##############################
- name: Join Worker Nodes # noqa: no-changed-when
  ansible.builtin.command: bash -c "{{ hostvars[groups['control-plane'][0]]['join_command'].stdout }}"
  when:
    - not kubelet_conf.stat.exists
    - inventory_hostname in groups["node"]

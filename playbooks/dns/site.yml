- name: Setup dns
  any_errors_fatal: true
  max_fail_percentage: 0
  hosts: all
  become: true

  tasks:
    - name: Wait cloud-init
      ansible.builtin.command:
        cloud-init status
      register: cloudinit_status
      retries: 5
      delay: 10
      until: "'done' in cloudinit_status.stdout"
      changed_when: false

    - name: Install packages
      ansible.builtin.apt:
        name:
          - dnsmasq
        state: present
        update_cache: true

    - name: Dnsmasq.conf
      ansible.builtin.copy:
        src: dnsmasq.conf
        dest: /etc/dnsmasq.conf
        mode: "0644"
        owner: "{{ ansible_env.SUDO_USER }}"
        group: "{{ ansible_env.SUDO_USER }}"

    - name: Custom dns.conf
      ansible.builtin.copy:
        src: dns.conf
        dest: /etc/dnsmasq.d/dns.conf
        mode: "0644"
        owner: "{{ ansible_env.SUDO_USER }}"
        group: "{{ ansible_env.SUDO_USER }}"

    ### release port 53
    - name: Stop systemd-resolved
      ansible.builtin.service:
        name: systemd-resolved
        state: stopped
    - name: Edit /etc/systemd/resolved.conf
      ansible.builtin.lineinfile:
        path: /etc/systemd/resolved.conf
        regexp: "DNSStubListener=.*"
        line: "DNSStubListener=no"
    - name: Start systemd-resolved
      ansible.builtin.service:
        name: systemd-resolved
        state: started
    ### release port 53

    - name: Restart dnsmasq
      ansible.builtin.service:
        name: "{{ item }}"
        state: restarted
        enabled: true
      with_items:
        - dnsmasq

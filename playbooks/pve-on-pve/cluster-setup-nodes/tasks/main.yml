- name: Dynamically create the proxmox_vms list
  ansible.builtin.set_fact:
    proxmox_vms: |
      {% set temp_list = [] %}
      {% for item in proxmox_vms_template %}
      {%   set _ = temp_list.append({
              "vmid": (subnet_third_octet * 1000) + (10 + item.seq_no),
              "name": "pve-192.168." ~ subnet_third_octet ~ "." ~ (10 + item.seq_no),
              "node": item.node,
              "mac": "0A:00:00:00:" ~ ('%02x' | format(subnet_third_octet)) ~ ":" ~ ('%02x' | format(10 + item.seq_no)),
              "ip": "192.168." ~ subnet_third_octet ~ "." ~ (10 + item.seq_no),
              "user": proxmox_vm_default_user,
              "password": proxmox_vm_default_password,
            })
      %}
      {% endfor %}
      {{ temp_list }}

- name: Debug proxmox_vms
  ansible.builtin.debug:
    var: proxmox_vms

- name: Delete VMs
  community.general.proxmox_kvm:
    api_host: "{{ api_host }}"
    api_user: "{{ api_user }}"
    api_password: "{{ api_password }}"
    node: "{{ item.node }}"
    vmid: "{{ item.vmid }}"
    state: absent
    force: true
    timeout: 60
  with_items: "{{ proxmox_vms }}"

- name: Create Proxmox VMs
  community.general.proxmox_kvm:
    api_host: "{{ api_host }}"
    api_user: "{{ api_user }}"
    api_password: "{{ api_password }}"
    node: "{{ item.node }}"
    vmid: "{{ item.vmid }}"
    name: "{{ item.name }}"
    state: present
    cores: 4
    memory: 16384
    ide:
      ide2: "local:iso/proxmox-ve_9.0-1-auto-from-http.iso,media=cdrom"
    scsi:
      scsi0: "local-zfs:20"
      scsi1: "local-zfs:80"
      scsi2: "local-zfs:80"
    net:
      net0: 'bridge=vmbr2,virtio={{ item.mac }}'
  with_items: "{{ proxmox_vms }}"

- name: Start VM for installation
  community.proxmox.proxmox_kvm:
    vmid: "{{ item.vmid }}"
    state: started
    api_host: "{{ api_host }}"
    api_user: "{{ api_user }}"
    api_password: "{{ api_password }}"
  with_items: "{{ proxmox_vms }}"

- name: Wait for VM to power off (installation completed)
  community.proxmox.proxmox_vm_info:
    vmid: "{{ item.vmid }}"
    api_host: "{{ api_host }}"
    api_user: "{{ api_user }}"
    api_password: "{{ api_password }}"
  register: vm_status_check
  until: vm_status_check.proxmox_vms[0].status == 'stopped'
  retries: 20
  delay: 15
  with_items: "{{ proxmox_vms }}"

- name: Set boot order to disk and network
  community.proxmox.proxmox_kvm:
    vmid: "{{ item.vmid }}"
    api_host: "{{ api_host }}"
    api_user: "{{ api_user }}"
    api_password: "{{ api_password }}"
    node: "{{ item.node }}"
    boot: "order=scsi0;net0"
    update: true
  with_items: "{{ proxmox_vms }}"

- name: Start VM from new boot device
  community.proxmox.proxmox_kvm:
    vmid: "{{ item.vmid }}"
    state: started
    api_host: "{{ api_host }}"
    api_user: "{{ api_user }}"
    api_password: "{{ api_password }}"
  with_items: "{{ proxmox_vms }}"

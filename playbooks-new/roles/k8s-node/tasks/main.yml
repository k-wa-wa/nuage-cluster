- name: Import install_deps tasks
  ansible.builtin.import_tasks: install_deps.yml

- name: Ensure kernel modules are loaded
  community.general.modprobe:
    name: "{{ item }}"
    state: present
  with_items:
    - overlay
    - br_netfilter

- name: Ensure kernel modules are configured to load on boot
  ansible.builtin.lineinfile:
    path: /etc/modules-load.d/kubernetes.conf
    line: "{{ item }}"
    create: true
    mode: "0644" # Changed mode to 0644 for config files
  with_items:
    - overlay
    - br_netfilter

- name: Ensure sysctl settings are applied
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_file: /etc/sysctl.d/k8s.conf
    state: present
    reload: true # Ensure settings are reloaded
  with_items:
    - name: net.bridge.bridge-nf-call-iptables
      value: 1
    - name: net.bridge.bridge-nf-call-ip6tables
      value: 1
    - name: net.ipv4.ip_forward
      value: 1
    - name: fs.inotify.max_user_instances
      value: 100000
    - name: fs.inotify.max_user_watches
      value: 100000

- name: Create containerd config directory
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: "0755"

- name: Disable swap permanently
  ansible.builtin.mount:
    name: swap
    fstype: swap
    state: absent

- name: Disable swap for current session
  ansible.builtin.command: swapoff -a
  changed_when: false # This command is not idempotent, but we want to run it if swap is active

- name: Generate default containerd config if not exists
  ansible.builtin.command: containerd config default > /etc/containerd/config.toml
  args:
    creates: /etc/containerd/config.toml # Idempotency check
  notify: Restart containerd

- name: Configure crictl endpoint
  ansible.builtin.command: >
    crictl config --set runtime-endpoint=unix:///run/containerd/containerd.sock \
    --set image-endpoint=unix:///run/containerd/containerd.sock
  changed_when: false # This command is not idempotent, but we want to ensure it's set

- name: Enable systemd cgroup in containerd config
  ansible.builtin.lineinfile:
    path: /etc/containerd/config.toml
    regexp: '^\s*SystemdCgroup = false'
    line: '            SystemdCgroup = true'
    insertafter: '^\s*\[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options\]'
    backup: true # Add backup for safety
  notify: Restart containerd

- name: Configure Kubelet node IP
  ansible.builtin.copy:
    content: "KUBELET_EXTRA_ARGS=--node-ip={{ ansible_host }}"
    dest: /etc/default/kubelet
    mode: "0644" # Changed mode to 0644 for config files
    owner: root # Kubelet config should be owned by root
    group: root # Kubelet config should be owned by root
  notify: Restart kubelet
